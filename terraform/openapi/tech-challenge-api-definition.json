{
    "openapi": "3.0.1",
    "info": {
        "title": "Tech Challenge FIAP API",
        "description": "API Rest for Tech Challenge of Master's Degree in Software Architecture \n\nDeveloped by:\n\n - Alexandre Miranda - RM357321\n\n - Diego Ceccon - RM357437\n\n - JÃ©ssica Rodrigues - RM357218\n\n - Rodrigo Sartori - RM358002\n\n - Wilton Souza - RM357991\n\n",
        "contact": {
            "name": "SOAT 8 Group",
            "email": "soat-group@gmail.com"
        },
        "version": "v1"
    },
    "paths": {
        "/payment/v1/webhook-payment": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Mercado Pago Payment WebHook",
                "operationId": "handleWebhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "topic",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ErrorsValidateData"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content Response",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not Found Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "security": [],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "POST",
                    "uri": "http://${lb_dns_name}/payment/v1/webhook-payment",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/payment/v1/qrs/{orderId}": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Find a Qr By OrderId",
                "operationId": "findQrByOrderId",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentQrResponseDTO"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "security": [],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/payment/v1/qrs/{orderId}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.orderId": "method.request.path.orderId"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/order/v1/orders/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get the status of an order by its ID",
                "operationId": "findOrderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Authorization token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderStatusResponseDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "security": [],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/order/v1/orders/{id}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Evolve Order to Paid or Not Paid",
                "operationId": "paidOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaidRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK Response"
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "PUT",
                    "uri": "http://${lb_dns_name}/order/v1/orders/{id}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/order/v1/orders": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Register a Order",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrderRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateOrderResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ErrorsValidateData"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "POST",
                    "uri": "http://${lb_dns_name}/order/v1/orders",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/order/v1/customers": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Register a Customer",
                "operationId": "create_1",
                "requestBody": {
                    "description": "Representation of a Customer",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerRequestDTO"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResponseDTO"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ErrorsValidateData"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "POST",
                    "uri": "http://${lb_dns_name}/order/v1/customers",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/order/v1/products": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Find a Product By Category",
                "operationId": "findProductsByCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MAIN_COURSE",
                                "SIDE_DISH",
                                "DRINK",
                                "DESSERT"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductPageResponseDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/order/v1/products",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/order/v1/orders/{id}/paid-status": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get the status of an order by its ID",
                "operationId": "isOrderPaid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/order/v1/orders/{id}/paid-status",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/order/v1/customers/{document}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Find a Customer By Document",
                "operationId": "findByDocument",
                "parameters": [
                    {
                        "name": "document",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResponseDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDto"
                                }
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/order/v1/customers/{document}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.document": "method.request.path.document"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/cook/v1/products": {
            "post": {
                "operationId": "CreateProductController_createUser",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product successfully created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Register a Product",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "POST",
                    "uri": "http://${lb_dns_name}/cook/v1/products",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            },
            "get": {
                "operationId": "GetProductController_getProducts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetProductResponse"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Find a Product By Category",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/cook/v1/products",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/cook/v1/products/category": {
            "get": {
                "operationId": "GetProductPaginatedController_getProductsPaginated",
                "parameters": [
                    {
                        "name": "category",
                        "required": false,
                        "in": "query",
                        "description": "Category of the product",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MAIN_COURSE",
                                "SIDE_DISH",
                                "DRINK",
                                "DESSERT"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "default": 0,
                            "example": 0,
                            "type": "number"
                        }
                    },
                    {
                        "name": "size",
                        "required": false,
                        "in": "query",
                        "description": "Number of products per page",
                        "schema": {
                            "default": 10,
                            "example": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "content": [
                                            {
                                                "id": "7901cbdc-2d24-4faf-aadd-995a7bcc6b5b",
                                                "name": "HambÃºrguer ClÃ¡ssico",
                                                "category": "MAIN_COURSE",
                                                "description": "HambÃºrguer com carne bovina, queijo e salada",
                                                "price": "30.00"
                                            }
                                        ],
                                        "currentPage": 0,
                                        "pageSize": 1,
                                        "totalElements": 31,
                                        "totalPages": 31
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized."
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Find a Product By Category",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/cook/v1/products/category",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/cook/v1/products/{id}": {
            "get": {
                "operationId": "GetProductByIdController_getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "UUID of the product to inactivate",
                        "schema": {
                            "example": "a6b9e046-fb5a-4a79-9d86-363e6fd20e11",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Get a Product By ID",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "GET",
                    "uri": "http://${lb_dns_name}/cook/v1/products/{id}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "InactivateProductController_inactivate",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "UUID of the product to inactivate",
                        "schema": {
                            "example": "a6b9e046-fb5a-4a79-9d86-363e6fd20e11",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product inactivated successfully."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Inactivate a Product By ID",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "DELETE",
                    "uri": "http://${lb_dns_name}/cook/v1/products/{id}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            },
            "put": {
                "operationId": "UpdateProductController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "UUID of the product to update",
                        "schema": {
                            "example": "a6b9e046-fb5a-4a79-9d86-363e6fd20e11",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found."
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Update a Product By ID",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "PUT",
                    "uri": "http://${lb_dns_name}/cook/v1/products/{id}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        },
        "/cook/v1/orders/{id}/status/{status}": {
            "patch": {
                "operationId": "UpdateOrderStatusController_updateOrderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "UUID of the order to update",
                        "schema": {
                            "example": "a6b9e046-fb5a-4a79-9d86-363e6fd20e11",
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": true,
                        "in": "path",
                        "description": "New status of the order",
                        "schema": {
                            "enum": [
                                "READY",
                                "FINISHED"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status updated."
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Erros4xx5xxResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "LambdaAuthorizer": []
                    }
                ],
                "summary": "Update Order Status",
                "tags": [
                    "Cook"
                ],
                "x-amazon-apigateway-integration": {
                    "type": "http_proxy",
                    "httpMethod": "PATCH",
                    "uri": "http://${lb_dns_name}/cook/v1/orders/{id}/status/{status}",
                    "connectionType": "VPC_LINK",
                    "connectionId": "${vpc_link_id}",
                    "requestParameters": {
                        "integration.request.path.id": "method.request.path.id",
                        "integration.request.path.status": "method.request.path.status"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200"
                        }
                    }
                }
            }
        }
    },
    "x-amazon-apigateway-gateway-responses": {
        "MISSING_AUTHENTICATION_TOKEN": {
            "statusCode": 404,
            "responseTemplates": {
                "application/json": "{\"message\": \"Route not found.\"}"
            }
        },
        "UNAUTHORIZED": {
            "statusCode": 401,
            "responseTemplates": {
                "application/json": "{\"message\": \"Unauthorized access.\"}"
            }
        },
        "DEFAULT_4XX": {
            "statusCode": 403,
            "responseTemplates": {
                "application/json": "{\"message\": \"Forbidden.\"}"
            }
        },
        "DEFAULT_5XX": {
            "statusCode": 500,
            "responseTemplates": {
                "application/json": "{\"message\": \"Internal server error.\"}"
            }
        }
    },
    "components": {
        "securitySchemes": {
            "LambdaAuthorizer": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "custom",
                "x-amazon-apigateway-authorizer": {
                    "type": "REQUEST",
                    "authorizerUri": "${authorizer_uri}",
                    "identitySource": "method.request.header.Authorization",
                    "authorizerCredentials": "${authorizer_credentials}"
                }
            }
        },
        "schemas": {
            "WebHookPaymentDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "87847869771"
                    }
                },
                "example": {
                    "id": "87847869771"
                }
            },
            "WebHookPaymentRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "example": "payment.created"
                    },
                    "api_version": {
                        "type": "string",
                        "example": "v1"
                    },
                    "data": {
                        "$ref": "#/components/schemas/WebHookPaymentDataRequest"
                    },
                    "date_created": {
                        "type": "string",
                        "example": "2024-09-17T23:29:26Z"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 115915708642
                    },
                    "live_mode": {
                        "type": "boolean",
                        "example": true
                    },
                    "type": {
                        "type": "string",
                        "example": "payment"
                    },
                    "user_id": {
                        "type": "string",
                        "example": "1986357239"
                    }
                }
            },
            "OrderStatusResponseDTO": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "ab69e046-fb5a-4a79-98d6-363efdf20e11"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "RECEIVED",
                        "enum": [
                            "RECEIVED",
                            "PREPARING",
                            "READY",
                            "FINISHED"
                        ]
                    }
                }
            },
            "CustomerResponseDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "ab69e046-fb5a-4a79-98d6-363efdf20e11"
                    },
                    "name": {
                        "type": "string",
                        "example": "Fiaperson"
                    },
                    "document": {
                        "type": "string",
                        "example": "42256425002"
                    },
                    "email": {
                        "type": "string",
                        "example": "fiaperson@soat.com"
                    }
                }
            },
            "ProductPageResponseDTO": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductResponseDTO"
                        }
                    },
                    "page": {
                        "$ref": "#/components/schemas/PageResponseDTO"
                    }
                }
            },
            "CreateOrderResponseDTO": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "ab69e046-fb5a-4a79-98d6-363efdf20e11"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "OrderProducts": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "7091cbdc-2d24-4faf-aadd-995a7bcc6b5b"
                    },
                    "observation": {
                        "type": "string",
                        "example": "Without Onions please"
                    }
                }
            },
            "PageResponseDTO": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "first": {
                        "type": "boolean",
                        "example": true
                    },
                    "last": {
                        "type": "boolean",
                        "example": true
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "empty": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "ProductResponseDTO": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "ab69e046-fb5a-4a79-98d6-363efdf20e11"
                    },
                    "name": {
                        "type": "string",
                        "example": "Cheese Hamburger"
                    },
                    "category": {
                        "type": "string",
                        "example": "MAIN_COURSE",
                        "enum": [
                            "MAIN_COURSE",
                            "SIDE_DISH",
                            "DRINK",
                            "DESSERT"
                        ]
                    },
                    "price": {
                        "type": "number",
                        "example": 25.9
                    },
                    "description": {
                        "type": "string",
                        "example": "Hamburger with Cheese"
                    }
                }
            },
            "PaidRequestDTO": {
                "type": "object",
                "properties": {
                    "isPaid": {
                        "type": "boolean"
                    }
                }
            },
            "CustomerRequestDTO": {
                "required": [
                    "document",
                    "email",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Fiaperson"
                    },
                    "document": {
                        "type": "string",
                        "example": "42256425002"
                    },
                    "email": {
                        "type": "string",
                        "example": "fiaperson@soat.com"
                    }
                }
            },
            "CreateOrderRequestDTO": {
                "required": [
                    "products"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string",
                        "example": "cd5b8e43-5d8f-4e92-9f7d-6b9d7e4f7e9c"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderProducts"
                        }
                    }
                }
            },
            "ErrorsValidateData": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "example": "fieldName"
                    },
                    "message": {
                        "type": "string",
                        "example": "must not be blank"
                    }
                }
            },
            "ProblemDto": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error Message"
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-24T22:13:58Z"
                    }
                }
            },
            "CreateProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pizza",
                        "description": "The name of the product"
                    },
                    "category": {
                        "type": "string",
                        "example": "MAIN_COURSE",
                        "description": "The category of the product"
                    },
                    "price": {
                        "type": "number",
                        "example": 19.99,
                        "description": "The price of the product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Delicious margherita pizza",
                        "description": "Description of the product"
                    }
                },
                "required": [
                    "name",
                    "category",
                    "price",
                    "description"
                ]
            },
            "GetProductResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the product",
                        "example": "ab69e046-fb5a-4a79-9d86-363e6fdf20e11"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the product",
                        "example": "Cheese Hamburger"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of the product",
                        "example": "MAIN_COURSE"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the product",
                        "example": 25.9
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the product",
                        "example": "Hamburger with Cheese"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "category",
                    "price",
                    "description"
                ]
            },
            "Erros4xx5xxResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 400,
                        "description": "HTTP status code of the error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Error occurred while processing the request",
                        "description": "Generic error message"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2025-02-01T23:28:18.000Z",
                        "description": "Timestamp when the error occurred"
                    },
                    "path": {
                        "type": "string",
                        "example": "/cook/v1/resource",
                        "description": "Path of the API endpoint where the error occurred"
                    }
                },
                "required": [
                    "statusCode",
                    "message",
                    "timestamp",
                    "path"
                ]
            },
            "UpdateProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Cheese Hamburger",
                        "description": "Name of the product"
                    },
                    "category": {
                        "type": "string",
                        "example": "MAIN_COURSE",
                        "description": "Category of the product"
                    },
                    "price": {
                        "type": "number",
                        "example": 19.99,
                        "description": "The price of the product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Hamburger with Cheese",
                        "description": "Description of the product"
                    },
                    "status": {
                        "type": "string",
                        "example": "ACTIVE",
                        "description": "The status of the product"
                    }
                },
                "required": [
                    "name",
                    "category",
                    "price",
                    "description",
                    "status"
                ]
            },
            "PaymentQrResponseDTO": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Cheese Hamburger",
                        "description": "Name of the product"
                    }
                },
                "required": [
                    "name"
                ]
            }
        }
    }
}